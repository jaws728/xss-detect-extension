{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main_app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.resData), 1\n  /* TEXT */\n  ), _createElementVNode(\"h1\", null, _toDisplayString($data.currentUrl), 1\n  /* TEXT */\n  ), $data.isXss ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"There is a XSS attack!\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"This site is safe.\"))]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;;;;uBAAXC,oBAKM,KALN,cAKM,CAJJC,oBAAoB,IAApB,EAAoB,IAApB,EAAoBC,iBAAdC,aAAc,CAApB,EAAa;EAAA;EAAb,CAII,EAHJF,oBAAuB,IAAvB,EAAuB,IAAvB,EAAuBC,iBAAjBC,gBAAiB,CAAvB,EAAgB;EAAA;EAAhB,CAGI,EAFOA,6BAAXH,oBAA8C,KAA9C,EAA8CI,UAA9C,EAAkB,wBAAlB,oBACAJ,oBAAoC,KAApC,EAAoCK,UAApC,EAAY,oBAAZ,EACI,CALN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$data","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["/Users/p/Desktop/thesis/lab/code/web-plugin/src/view/popup.vue"],"sourcesContent":["<template>\n  <div class=\"main_app\">\n    <h1>{{resData}}</h1>\n    <h1>{{currentUrl}}</h1>\n    <div v-if=\"isXss\">There is a XSS attack!</div>\n    <div v-else>This site is safe.</div>\n  </div>\n</template>\n\n<script>\nimport {requestMixin} from \"@/mixins\"\nexport default {\n  name: 'popupView',\n  mixins: [requestMixin],\n  data () {\n    return {\n      isXss: false,\n      resData: '',\n      currentUrl: ''\n    }\n  },\n  methods: {\n    init(){\n      chrome.storage.local.get(['url'], function(res){\n        this.currentUrl = res.url\n      })\n    },\n    getXSS() {\n      // const data = api('/api', {url: window.location.pathname})\n      const response = this.getXssrequest('asn')\n      console.log(response.data)\n      this.resData = response.data\n      // this.isXss = data != 0 ? true : false\n    }\n  },\n  created(){\n    this.init()\n  }\n}\n\n</script>\n\n<style>\n.main_app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  width: 200px;\n}\n.main_app div {\n  font-size: large;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}