{"ast":null,"code":"import { withModifiers as _withModifiers, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main_app\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, \"----------\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, \"----------\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.init && $options.init(...args), [\"prevent\"]))\n  }, \"Check XSS\"), _createElementVNode(\"div\", null, _toDisplayString($data.resData), 1\n  /* TEXT */\n  ), _hoisted_2, _createElementVNode(\"div\", null, _toDisplayString($data.url), 1\n  /* TEXT */\n  ), _hoisted_3, _createElementVNode(\"div\", null, \"TEST: \" + _toDisplayString($data.test), 1\n  /* TEXT */\n  ), _createCommentVNode(\" <div v-if=\\\"isXss\\\">There is a XSS attack!</div>\\n    <div v-else>This site is safe.</div> \")]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;gCAGTC,oBAAqB,KAArB,EAAqB,IAArB,EAAK,YAAL,EAAe;AAAA;AAAf;;gCAEAA,oBAAqB,KAArB,EAAqB,IAArB,EAAK,YAAL,EAAe;AAAA;AAAf;;;uBALFC,oBASM,KATN,cASM,CARJD,oBAAgD,QAAhD,EAAgD;IAAvCE,OAAK,wDAAUC,uCAAV,EAAc,WAAd;EAAkC,CAAhD,EAA8B,WAA9B,CAQI,EAPJH,oBAAwB,KAAxB,EAAwB,IAAxB,EAAwBI,iBAAhBC,aAAgB,CAAxB,EAAe;EAAA;EAAf,CAOI,EANJC,UAMI,EALJN,oBAAoB,KAApB,EAAoB,IAApB,EAAoBI,iBAAZC,SAAY,CAApB,EAAW;EAAA;EAAX,CAKI,EAJJE,UAII,EAHJP,oBAA2B,KAA3B,EAA2B,IAA3B,EAAK,WAAMI,iBAAGC,UAAH,CAAX,EAAkB;EAAA;EAAlB,CAGI,EAFJG,mHAEI,CATN","names":["class","_createElementVNode","_createElementBlock","onClick","$options","_toDisplayString","$data","_hoisted_2","_hoisted_3","_createCommentVNode"],"sourceRoot":"","sources":["D:\\jaws7\\Desktop\\lab\\code\\web-plugin\\src\\view\\popup.vue"],"sourcesContent":["<template>\n  <div class=\"main_app\">\n    <button @click.prevent=\"init\">Check XSS</button>\n    <div>{{ resData }}</div>\n    <div>----------</div>\n    <div>{{ url }}</div>\n    <div>----------</div>\n    <div>TEST: {{ test }}</div>\n    <!-- <div v-if=\"isXss\">There is a XSS attack!</div>\n    <div v-else>This site is safe.</div> -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'popupView',\n  data() {\n    return {\n      resData: 'loading...',\n      url: '',\n      baseURL: 'http://127.0.0.1:5000/api/model',\n      test: 0,\n    };\n  },\n  methods: {\n    getXSS(q) {\n      return axios({\n        url: this.baseURL + '?q=' + q,\n        method: 'post',\n      });\n    },\n    async init() {\n      // this.bg = chrome.extension.getBackgroundPage().q;\n      chrome.storage.local.get(['url'], function (res) {\n        this.url = res.url;\n        console.log('url set to: ', res.url);\n      });\n      alert(this.url);\n      try {\n        const { data: res } = await this.getXSS(url);\n        this.resData = res;\n      } catch (e) {\n        console.log('Error: ', e);\n      }\n      // this.resData = this.q;\n      // chrome.storage.local.get(['xss'], function (res) {\n      //   if (res !== null) {\n      //     this.resData = res.xss;\n      //   }\n      // });\n      // if (window.localStorage.getItem('xss') !== null) {\n      //   this.resData = window.localStorage.getItem('xss');\n      // }\n      // if (this.resData === null || this.resData === 'loading...') {\n      //   try {\n      //     this.resData = q;\n      //     // const { data } = await requestMixin.methods.getXssRequest(q);\n      //     // this.resData = data;\n      //   } catch (e) {\n      //     console.error(e);\n      //   }\n      // }\n      // alert(this.resData);\n    },\n  },\n  created() {\n    chrome.storage.local.get(['test'], function (res) {\n      this.test = res.test;\n      console.log('test set to ', res.test);\n    });\n    this.init();\n  },\n};\n</script>\n\n<style>\n.main_app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 40px;\n  width: 200px;\n}\n.main_app div {\n  font-size: large;\n}\n.main_app button {\n  margin-bottom: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}